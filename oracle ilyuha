
1)
CREATE OR REPLACE FUNCTION get_job_name(p_job_id VARCHAR2)
RETURN VARCHAR2
IS
  v_title VARCHAR2(50);
BEGIN
  SELECT job_title INTO v_title
  FROM jobs
  WHERE job_id = p_job_id;
  RETURN v_title;
END;
/
SELECT get_job_name('ST_MAN') AS job_title FROM dual;


2)
CREATE OR REPLACE PROCEDURE add_dept(p_name VARCHAR2)
IS
BEGIN
  INSERT INTO departments (department_id, department_name)
  VALUES (departments_seq.NEXTVAL, p_name);
END;
/
EXEC add_dept('123');
SELECT * FROM departments ORDER BY department_id DESC;


3)
CREATE OR REPLACE FUNCTION is_manager(p_emp_id NUMBER)
RETURN VARCHAR2
IS
  v_count NUMBER;
BEGIN
  SELECT COUNT(*) INTO v_count FROM employees WHERE manager_id = p_emp_id;

  IF v_count > 0 THEN
    RETURN 'YES';
  ELSE
    RETURN 'NO';
  END IF;
END;
/
SELECT is_manager(100) AS is_manager FROM dual;


4)
CREATE OR REPLACE PROCEDURE update_email(p_emp_id NUMBER, p_email VARCHAR2)
IS
BEGIN
  UPDATE employees
  SET email = p_email
  WHERE employee_id = p_emp_id;
END;
/
EXEC update_email(100, 'newemail@mail.com');
SELECT employee_id, email
FROM employees
WHERE employee_id = 100;

5)
CREATE OR REPLACE FUNCTION employee_count
RETURN NUMBER
IS
  v_total NUMBER;
BEGIN
  SELECT COUNT(*) INTO v_total FROM employees;
  RETURN v_total;
END;
/
SELECT employee_count AS total_employees FROM dual;


6)
CREATE OR REPLACE PROCEDURE raise_salary(p_percent NUMBER)
IS
BEGIN
  UPDATE employees
  SET salary = salary + (salary * p_percent / 100);
END;
/
EXEC raise_salary(10);
SELECT employee_id, first_name, last_name, salary
FROM employees;


7)
CREATE OR REPLACE FUNCTION max_salary_in_dept(p_dept_id NUMBER)
RETURN NUMBER
IS
  v_max NUMBER;
BEGIN
  SELECT MAX(salary) INTO v_max
  FROM employees
  WHERE department_id = p_dept_id;
  RETURN v_max;
END;
/
SELECT max_salary_in_dept(90) AS max_salary FROM dual;


8)
CREATE OR REPLACE PROCEDURE delete_dept(p_dept_id NUMBER)
IS
BEGIN
  DELETE FROM departments
  WHERE department_id = p_dept_id;
END;
/
EXEC delete_dept(280);

9)
BEGIN
  FOR r IN (SELECT first_name  ' '  last_name AS name, salary FROM employees) LOOP
    DBMS_OUTPUT.PUT_LINE(r.name  ' - '  r.salary);
  END LOOP;
END;
/
SET SERVEROUTPUT ON;


10)
CREATE OR REPLACE FUNCTION get_employees_by_dept(p_dept_id NUMBER)
RETURN SYS_REFCURSOR
IS
  c_emp SYS_REFCURSOR;
BEGIN
  OPEN c_emp FOR
    SELECT employee_id, first_name, last_name, salary
    FROM employees
    WHERE department_id = p_dept_id;
  RETURN c_emp;
END;
/
VAR rc REFCURSOR;
EXEC :rc := get_employees_by_dept(90);
PRINT rc;
